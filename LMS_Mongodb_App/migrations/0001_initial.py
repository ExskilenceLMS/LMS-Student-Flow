# Generated by Django 4.1.13 on 2025-03-03 12:38

from django.db import migrations, models
import djongo.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='announcements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('announcement_id', models.CharField(max_length=20)),
                ('announcement_title', models.TextField()),
                ('announcement_message', models.TextField()),
                ('announcement_timestamp', models.DateTimeField()),
                ('origin', models.CharField(max_length=20)),
                ('attachments', djongo.models.fields.JSONField()),
                ('group_id', models.CharField(max_length=20)),
                ('announcement_type', models.CharField(max_length=20)),
                ('delete', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'announcements',
            },
        ),
        migrations.CreateModel(
            name='group_announcement',
            fields=[
                ('group_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('group_name', models.TextField()),
                ('student_ids', djongo.models.fields.JSONField()),
                ('delete', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'group_announcement',
            },
        ),
        migrations.CreateModel(
            name='live_sessions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=20)),
                ('session_title', models.TextField()),
                ('session_starttime', models.DateTimeField()),
                ('session_author', models.TextField()),
                ('session_subject', models.TextField()),
                ('session_meetlink', models.TextField()),
                ('session_endtime', models.DateTimeField()),
                ('session_video_link', models.TextField()),
                ('session_status', models.TextField()),
                ('student_ids', djongo.models.fields.JSONField(default=list)),
                ('delete', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'live_sessions',
            },
        ),
        migrations.CreateModel(
            name='logs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=20)),
                ('student_id', models.CharField(max_length=20)),
                ('session_start_time', models.DateTimeField()),
                ('session_end_time', models.DateTimeField()),
                ('delete', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'logs',
            },
        ),
        migrations.CreateModel(
            name='notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_id', models.CharField(max_length=20)),
                ('notification_title', models.TextField()),
                ('notification_message', models.TextField()),
                ('notification_timestamp', models.DateTimeField()),
                ('status', models.CharField(max_length=1)),
                ('student_id', models.CharField(max_length=20)),
                ('delete', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'notification',
            },
        ),
        migrations.CreateModel(
            name='participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=20)),
                ('student_id', models.CharField(max_length=20)),
                ('display_name', models.CharField(max_length=20)),
                ('attended_time', models.FloatField()),
                ('delete', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'participant',
            },
        ),
        migrations.CreateModel(
            name='practice_questions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=20)),
                ('subject_id', models.CharField(max_length=20)),
                ('question_type', models.CharField(max_length=20)),
                ('practice_score_secured', models.FloatField()),
                ('practice_max_score', models.FloatField()),
                ('practice_week_number', models.IntegerField()),
                ('practice_completion_time', models.DateTimeField()),
                ('question_id', models.CharField(max_length=20)),
                ('delete', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'practice_questions',
            },
        ),
        migrations.CreateModel(
            name='student_attendance_session_details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=20)),
                ('student_id', models.CharField(max_length=20)),
                ('session_in', models.DateTimeField()),
                ('session_out', models.DateTimeField()),
                ('attended_time', models.FloatField()),
                ('delete', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'student_attendance_session_details',
            },
        ),
        migrations.CreateModel(
            name='student_online_session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=20)),
                ('student_id', models.CharField(max_length=20)),
                ('attended_duration', models.FloatField()),
                ('display_name', models.CharField(max_length=20)),
                ('delete', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'student_online_session',
            },
        ),
        migrations.CreateModel(
            name='student_practice_coding_ans',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=20)),
                ('question_id', models.CharField(max_length=20)),
                ('entered_ans', models.TextField()),
                ('subject_id', models.CharField(max_length=20)),
                ('answered_time', models.DateTimeField()),
                ('testcase_results', djongo.models.fields.JSONField()),
                ('delete', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'student_practice_coding_ans',
            },
        ),
        migrations.CreateModel(
            name='student_practiceMCQ_answers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=20)),
                ('question_id', models.CharField(max_length=20)),
                ('correct_ans', models.CharField(max_length=20)),
                ('entered_ans', models.CharField(max_length=20)),
                ('subject_id', models.CharField(max_length=20)),
                ('answered_time', models.DateTimeField()),
                ('delete', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'student_practiceMCQ_answers',
            },
        ),
        migrations.CreateModel(
            name='students',
            fields=[
                ('student_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('student_group_ids', djongo.models.fields.JSONField()),
                ('student_notification', djongo.models.fields.JSONField()),
                ('student_announcements', djongo.models.fields.JSONField()),
                ('student_education_details', djongo.models.fields.JSONField()),
                ('delete', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'students',
            },
        ),
        migrations.CreateModel(
            name='students_assessments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=20)),
                ('assessment_type', models.CharField(max_length=20)),
                ('subject_id', models.CharField(max_length=20)),
                ('test_id', models.CharField(max_length=20)),
                ('course_id', models.CharField(max_length=20)),
                ('assessment_score_secured', models.FloatField()),
                ('assessment_max_score', models.FloatField()),
                ('assessment_week_number', models.IntegerField()),
                ('assessment_completion_time', models.DateTimeField()),
                ('assessment_rank', models.IntegerField()),
                ('assessment_overall_rank', models.IntegerField()),
                ('delete', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'students_assessments',
            },
        ),
    ]
